#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require "rubygems"
require "colorize"

require "rubygame"
include Rubygame

Rubygame.init
Mixer.open_audio

require 'io/wait'

def clear_stdin(fois=15)
  fois.times do STDIN.getc end
end


if ARGV.empty?
  puts "Précisez un répertoire (n'oubliez pas le '/' final) dans lequel se trouve un texte :"
  ARGV[0]=gets	
  while ARGV[0][-2, 1]!='/' do
    puts "Il faut terminer par un / (oui je sais c'est chiant mais c'est comme ça)"
    ARGV[0]=gets
  end
  ARGV[0].gsub!("\n", '')
end

Dir.chdir(ARGV[0])

$texte=Array.new
$endroitTexte=0
$musique=nil
$paragraphe=0
$fichierActuel=0

def imprimer(phrase=$texte[$endroitTexte], clear=true)

  if clear
    puts `clear`
    puts "\\\\\\\\\\\\\\\\\\\\\\\\\      FOOTNOTES    \\\\\\\\\\\\\\\\\\\\"
    puts "Bienvenue dans une triple histoire interactive. Vous devez parcourir un texte composé de trois parties distinctes et en même temps complémentaires. Ces dernières sont reliées entre elles par certaines phrases faisant office de pont.".yellow
    puts "Elles sont en rouge et sont des passerelles entre les histoires".red
    puts "Chaque histoire a un début et une fin. Il y a un sens de lecture : Cliquez sur ESPACE pour avancer ou 'b' pour reculer dans l'histoire".yellow
    puts "Tapez sur n'importe quelle touche quand vous êtes prêts pour commencer".yellow
    puts "Vous pouvez quitter à tout moment avec 'q'".yellow
    puts "tapez sur n'importe quelle touche pour commencer\n\n".yellow
  end

  ## suppression de tous les caractères de codage
  puts phrase.gsub("@", '').gsub("#", '').gsub("\n", ' ').gsub("^", '')

end

def ouvrirFichier(numeroFichier, symbole=true)

  $texte.clear
  $fichierActuel=numeroFichier

  file=File.open(numeroFichier.to_s, "r")
  
  ### musique
  if file.readline.start_with?("|") then
    file.rewind
    if $musique != nil 
      $musique.fade_out(5)
    end
    nomMusique = file.readline.gsub(/\||\n/, '')
    $musique=Music.load(nomMusique)
    $musique.play(:fade_in => 10, :repeats => -1)
  else file.rewind end 
  
  ##couperTexte
  
  file.each("\n\n") do |i|
    $texte << i
  end
  
  $texte=$texte[$paragraphe].scan(/[^\.?!]+[\.!?]/).map(&:strip)
  
  if symbole==false then
    $endroitTexte=$texte.length-1
  elsif symbole==true
    $endroitTexte=0
  else 
    $endroitTexte=$texte.index{ |mot| mot.start_with?(symbole)}
    if $endroitTexte==nil then p "Oups, a priori, il n'y a pas de symbole correspondant au pont. Verifiez votre texte. Exit... " ; sleep 1 ; exec("clear") end
  end
  
  
  imprimer($texte[$endroitTexte], false)
  
end


def get_char(tempsSleep=0.1)
  state = `stty -g`
  `stty raw -echo -icanon isig`
  STDIN.getc.chr
  
ensure
  `stty #{state}`
  
  sleep tempsSleep

end

imprimer("")
userInput=get_char
if ARGV[1] then
  ouvrirFichier(ARGV[1].to_s, "@")
else ouvrirFichier(0.to_s, "@")
end


userInput=get_char

while (userInput != 'q') do

  case userInput
  when (" ") 
    $endroitTexte+=1
  when ('b')
    $endroitTexte-=1
  else 
    userInput=get_char
    redo
  end
  
  ligneActuelle=$texte[$endroitTexte]

  if($endroitTexte==$texte.length) then
    puts "fin de l'histoire, revenez en arrière".blue
    $endroitTexte-=1
    ligneActuelle=$texte[$endroitTexte]
    imprimer(ligneActuelle, false)
  elsif($endroitTexte==-1) then
    puts "début de l'histoire, avancez".green
    $endroitTexte+=1
    ligneActuelle=$texte[$endroitTexte]
    imprimer(ligneActuelle, false)

  elsif(ligneActuelle.start_with?("^")) then
    imprimer(ligneActuelle.red)
    begin
      fichier=rand(Dir.glob("?").length)
      if fichier==$fichierActuel
        redo
      end
    end
    ouvrirFichier(fichier, rand(2)==1)
    ##clear_stdin ## TODO je ne sais pas comment le faire... ou alors le bloquer ?

  elsif(ligneActuelle.start_with?("#")) then
    imprimer(ligneActuelle[1..-3].yellow)
    symbole=ligneActuelle[-3,1]
    fichier=ligneActuelle[-2,1]
    $paragraphe+=1
    ouvrirFichier(fichier, symbole)

  elsif(ligneActuelle.start_with?("~")) then
    imprimer(ligneActuelle[1..-3].yellow)
    symbole=ligneActuelle[-3,1]
    fichier=ligneActuelle[-2,1]
    $paragraphe-=1
    ouvrirFichier(fichier, symbole)

    ##clear_stdin ## TODO je ne sais pas comment le faire... ou alors le bloquer ?

  else imprimer(ligneActuelle)
    
  end
  
  userInput=get_char
  
end

Rubygame.quit
